.calendar {
    padding: 0 0 5rem;
}

.calendar-header {
    margin-left: calc(var(--calendar-activities-header) + 1.125rem);
    padding-top: 1rem;

    &.sticky {
        position: sticky;
        top: 0;
        left: 0;
        right: 0;
        background: white;
        z-index: 11 * 52 + 2;
    }
}

.calendar-header-months {
    line-height: 2;
    font-weight: bold;
    text-transform: uppercase;
}

.calendar-header-month {
    font-size: 1.5rem;
    text-align: center;
    position: sticky;
    left: 0;
    background: white;
}

.calendar-header-weeks {
    flex-flow: nowrap;
    line-height: 3;
    font-weight: bold;
    font-size: .8rem;
}


.calendar-header-week {
    text-align: center;
}

month-length {
    height: 2px;
    background: black;
}


.calendar-header-month-length {
    display: flex;
    gap: 0.4rem;
    flex-wrap: nowrap;
}

.calendar-activities-header {
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    padding: 0 1rem;
    max-width: 8rem;
    height: 100%;
    min-height: 100rem;

    line-height: 1.2;
    font-size: 0.8rem;
    font-weight: bold;
    text-transform: uppercase;
    text-align: right;
    z-index: 11 * 52 + 1;

    // &.sticky {
    //     position: sticky;
    //     top: 0;
    //     left: -1rem;
    //     bottom: 0;
    //     background: white;
    //     z-index: 1;
    // }
}

.horizontal-sticky {
    position: sticky;
    left: 0;
}

.vertical-sticky {
    position: sticky;
    top: 0;
}

// .activity-type-brand-campaign,
// .activity-type-main-seasonal-campaign,
// .activity-type-promotional-moments,
// .activity-type-main-seasonal-campaign-product,
// .activity-type-block-support,
// .activity-type-hype {
//     min-height: 17rem;
// }

// .activity-type-consumer-moments,
// .activity-type-commecial-moments,
// .activity-type-always-on-noos,
// .activity-type-poc,
// .activity-type-golf {
//     min-height: 8rem;
// }

.calendar-activity-header {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    height: 100%;
    background-color: white;
    
    &:before {
        content: '';
        position: absolute;
        left: -2px;
        width: 2px;
        height: 100%;
        background: white;
        z-index: -1;
    }
}

.calendar-body {
    margin-top: 1rem;
}

.week-size-col {
    // min-width: var(--week-col-size);
    transition: min-width 1s;
}

.calendar-header-season {
    display: flex;
    justify-content: center;
    font-weight: bold;
    font-style: italic;
    text-transform: uppercase;
    color: var(--season-text-color);
    background-color: white;

    &:not(:last-child) {
        &:after {
            content: '';
            position: absolute;
            right: 0;
            width: 2px;
            height: 100%;
            background: var(--season-text-color);
        }
    }
}

.flex-with-gap {
    display: flex;
    flex-direction: column;
    gap: .5rem;
}

.calendar-placeholder {
    display: flex;
    flex-direction: column;
    row-gap: 0.25rem;
}

.calendar-activity-list {
    position: absolute;
    display: flex;
    flex-direction: column;
    row-gap: .25rem;
}

.calendar-activity {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    background-color: white;
    padding: 0 0 0.5rem;

    &:after {
        content: '';
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        // https://kovart.github.io/dashed-border-generator/
        /* background: url(data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23BFBFBFFF' stroke-width='6' stroke-dasharray='5%2c 15' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e); */
        border: 2px dashed #BFBFBF;
        border-radius: 2px;
        z-index: 1;
        pointer-events: none;
    }
}

.calendar-activity-group {
    // position: relative;
    text-align: center;
    // z-index: 0;
}


.has-activity {
    position: relative;
    z-index: calc(11 * 52); // types * weeks
    isolation: isolate;

}